{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { CameraType } from \"./Camera.types\";\nimport { canGetUserMedia, isBackCameraAvailableAsync, isFrontCameraAvailableAsync } from \"./WebUserMediaManager\";\nexport default {\n  get name() {\n    return 'ExponentCameraManager';\n  },\n  get Type() {\n    return {\n      back: 'back',\n      front: 'front'\n    };\n  },\n  get FlashMode() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      torch: 'torch'\n    };\n  },\n  get AutoFocus() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      singleShot: 'singleShot'\n    };\n  },\n  get WhiteBalance() {\n    return {\n      auto: 'auto',\n      continuous: 'continuous',\n      manual: 'manual'\n    };\n  },\n  get VideoQuality() {\n    return {};\n  },\n  isAvailableAsync: function isAvailableAsync() {\n    return _regeneratorRuntime.async(function isAvailableAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", canGetUserMedia());\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  takePicture: function takePicture(options, camera) {\n    return _regeneratorRuntime.async(function takePicture$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(camera.takePicture(options));\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  pausePreview: function pausePreview(camera) {\n    return _regeneratorRuntime.async(function pausePreview$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(camera.pausePreview());\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  resumePreview: function resumePreview(camera) {\n    return _regeneratorRuntime.async(function resumePreview$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(camera.resumePreview());\n          case 2:\n            return _context4.abrupt(\"return\", _context4.sent);\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getAvailableCameraTypesAsync: function getAvailableCameraTypesAsync() {\n    var devices, types;\n    return _regeneratorRuntime.async(function getAvailableCameraTypesAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!(!canGetUserMedia() || !navigator.mediaDevices.enumerateDevices)) {\n              _context5.next = 2;\n              break;\n            }\n            return _context5.abrupt(\"return\", []);\n          case 2:\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(navigator.mediaDevices.enumerateDevices());\n          case 4:\n            devices = _context5.sent;\n            _context5.t0 = _regeneratorRuntime;\n            _context5.t1 = Promise;\n            _context5.next = 9;\n            return _regeneratorRuntime.awrap(isFrontCameraAvailableAsync(devices));\n          case 9:\n            _context5.t2 = _context5.sent;\n            if (!_context5.t2) {\n              _context5.next = 12;\n              break;\n            }\n            _context5.t2 = CameraType.front;\n          case 12:\n            _context5.t3 = _context5.t2;\n            _context5.next = 15;\n            return _regeneratorRuntime.awrap(isBackCameraAvailableAsync());\n          case 15:\n            _context5.t4 = _context5.sent;\n            if (!_context5.t4) {\n              _context5.next = 18;\n              break;\n            }\n            _context5.t4 = CameraType.back;\n          case 18:\n            _context5.t5 = _context5.t4;\n            _context5.t6 = [_context5.t3, _context5.t5];\n            _context5.t7 = _context5.t1.all.call(_context5.t1, _context5.t6);\n            _context5.next = 23;\n            return _context5.t0.awrap.call(_context5.t0, _context5.t7);\n          case 23:\n            types = _context5.sent;\n            return _context5.abrupt(\"return\", types.filter(Boolean));\n          case 25:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getAvailablePictureSizes: function getAvailablePictureSizes(ratio, camera) {\n    return _regeneratorRuntime.async(function getAvailablePictureSizes$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(camera.getAvailablePictureSizes(ratio));\n          case 2:\n            return _context6.abrupt(\"return\", _context6.sent);\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"names":["CameraType","canGetUserMedia","isBackCameraAvailableAsync","isFrontCameraAvailableAsync","name","Type","back","front","FlashMode","on","off","auto","torch","AutoFocus","singleShot","WhiteBalance","continuous","manual","VideoQuality","isAvailableAsync","_regeneratorRuntime","async","isAvailableAsync$","_context","prev","next","abrupt","stop","Promise","takePicture","options","camera","takePicture$","_context2","awrap","sent","pausePreview","pausePreview$","_context3","resumePreview","resumePreview$","_context4","getAvailableCameraTypesAsync","devices","types","getAvailableCameraTypesAsync$","_context5","navigator","mediaDevices","enumerateDevices","t0","t1","t2","t3","t4","t5","t6","t7","all","call","filter","Boolean","getAvailablePictureSizes","ratio","getAvailablePictureSizes$","_context6"],"sources":["/Users/rihong/Documents/Github/SortifyAI/node_modules/expo-camera/src/ExponentCameraManager.web.ts"],"sourcesContent":["import { CameraCapturedPicture, CameraPictureOptions, CameraType } from './Camera.types';\nimport { ExponentCameraRef } from './ExponentCamera.web';\nimport {\n  canGetUserMedia,\n  isBackCameraAvailableAsync,\n  isFrontCameraAvailableAsync,\n} from './WebUserMediaManager';\n\nexport default {\n  get name(): string {\n    return 'ExponentCameraManager';\n  },\n  get Type() {\n    return {\n      back: 'back',\n      front: 'front',\n    };\n  },\n  get FlashMode() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      torch: 'torch',\n    };\n  },\n  get AutoFocus() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      singleShot: 'singleShot',\n    };\n  },\n  get WhiteBalance() {\n    return {\n      auto: 'auto',\n      continuous: 'continuous',\n      manual: 'manual',\n    };\n  },\n  get VideoQuality() {\n    return {};\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    return canGetUserMedia();\n  },\n  async takePicture(\n    options: CameraPictureOptions,\n    camera: ExponentCameraRef\n  ): Promise<CameraCapturedPicture> {\n    return await camera.takePicture(options);\n  },\n  async pausePreview(camera: ExponentCameraRef): Promise<void> {\n    await camera.pausePreview();\n  },\n  async resumePreview(camera: ExponentCameraRef): Promise<void> {\n    return await camera.resumePreview();\n  },\n  async getAvailableCameraTypesAsync(): Promise<string[]> {\n    if (!canGetUserMedia() || !navigator.mediaDevices.enumerateDevices) return [];\n\n    const devices = await navigator.mediaDevices.enumerateDevices();\n\n    const types: (string | null)[] = await Promise.all([\n      (await isFrontCameraAvailableAsync(devices)) && CameraType.front,\n      (await isBackCameraAvailableAsync()) && CameraType.back,\n    ]);\n\n    return types.filter(Boolean) as string[];\n  },\n  async getAvailablePictureSizes(ratio: string, camera: ExponentCameraRef): Promise<string[]> {\n    return await camera.getAvailablePictureSizes(ratio);\n  },\n\n  // TODO(Bacon): Is video possible?\n  // record(options): Promise\n  // stopRecording(): Promise<void>\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}