{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nexport var userMediaRequested = false;\nexport var mountedInstances = [];\nfunction requestLegacyUserMediaAsync(props) {\n  var optionalSource, constraintToSourceId, sources, audioSource, videoSource, audioSourceId, videoSourceId;\n  return _regeneratorRuntime.async(function requestLegacyUserMediaAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          optionalSource = function optionalSource(id) {\n            return {\n              optional: [{\n                sourceId: id\n              }]\n            };\n          };\n          constraintToSourceId = function constraintToSourceId(constraint) {\n            var deviceId = constraint.deviceId;\n            if (typeof deviceId === 'string') {\n              return deviceId;\n            }\n            if (Array.isArray(deviceId) && deviceId.length > 0) {\n              return deviceId[0];\n            }\n            if (typeof deviceId === 'object' && deviceId.ideal) {\n              return deviceId.ideal;\n            }\n            return null;\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n            return MediaStreamTrack.getSources(function (sources) {\n              return resolve(sources);\n            });\n          }));\n        case 4:\n          sources = _context.sent;\n          audioSource = null;\n          videoSource = null;\n          sources.forEach(function (source) {\n            if (source.kind === 'audio') {\n              audioSource = source.id;\n            } else if (source.kind === 'video') {\n              videoSource = source.id;\n            }\n          });\n          audioSourceId = constraintToSourceId(props.audioConstraints);\n          if (audioSourceId) {\n            audioSource = audioSourceId;\n          }\n          videoSourceId = constraintToSourceId(props.videoConstraints);\n          if (videoSourceId) {\n            videoSource = videoSourceId;\n          }\n          return _context.abrupt(\"return\", [optionalSource(audioSource), optionalSource(videoSource)]);\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nfunction sourceSelectedAsync(isMuted, audioConstraints, videoConstraints) {\n  var constraints;\n  return _regeneratorRuntime.async(function sourceSelectedAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          constraints = {\n            video: typeof videoConstraints !== 'undefined' ? videoConstraints : true\n          };\n          if (!isMuted) {\n            constraints.audio = typeof audioConstraints !== 'undefined' ? audioConstraints : true;\n          }\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(getAnyUserMediaAsync(constraints));\n        case 4:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function requestUserMediaAsync(props) {\n  var isMuted,\n    _await$requestLegacyU,\n    _await$requestLegacyU2,\n    audio,\n    video,\n    _args3 = arguments;\n  return _regeneratorRuntime.async(function requestUserMediaAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          isMuted = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : true;\n          if (!canGetUserMedia()) {\n            _context3.next = 5;\n            break;\n          }\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(sourceSelectedAsync(isMuted, props.audio, props.video));\n        case 4:\n          return _context3.abrupt(\"return\", _context3.sent);\n        case 5:\n          _context3.next = 7;\n          return _regeneratorRuntime.awrap(requestLegacyUserMediaAsync(props));\n        case 7:\n          _await$requestLegacyU = _context3.sent;\n          _await$requestLegacyU2 = _slicedToArray(_await$requestLegacyU, 2);\n          audio = _await$requestLegacyU2[0];\n          video = _await$requestLegacyU2[1];\n          _context3.next = 13;\n          return _regeneratorRuntime.awrap(sourceSelectedAsync(isMuted, audio, video));\n        case 13:\n          return _context3.abrupt(\"return\", _context3.sent);\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getAnyUserMediaAsync(constraints) {\n  var ignoreConstraints,\n    _args4 = arguments;\n  return _regeneratorRuntime.async(function getAnyUserMediaAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          ignoreConstraints = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : false;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(getUserMediaAsync(_objectSpread(_objectSpread({}, constraints), {}, {\n            video: ignoreConstraints || constraints.video\n          })));\n        case 4:\n          return _context4.abrupt(\"return\", _context4.sent);\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](1);\n          if (!(!ignoreConstraints && _context4.t0.name === 'ConstraintNotSatisfiedError')) {\n            _context4.next = 13;\n            break;\n          }\n          _context4.next = 12;\n          return _regeneratorRuntime.awrap(getAnyUserMediaAsync(constraints, true));\n        case 12:\n          return _context4.abrupt(\"return\", _context4.sent);\n        case 13:\n          throw _context4.t0;\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[1, 7]], Promise);\n}\nexport function getUserMediaAsync(constraints) {\n  var _getUserMedia;\n  return _regeneratorRuntime.async(function getUserMediaAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)) {\n            _context5.next = 2;\n            break;\n          }\n          return _context5.abrupt(\"return\", navigator.mediaDevices.getUserMedia(constraints));\n        case 2:\n          _getUserMedia = navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] || navigator['msGetUserMedia'];\n          return _context5.abrupt(\"return\", new Promise(function (resolve, reject) {\n            return _getUserMedia.call(navigator, constraints, resolve, reject);\n          }));\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function canGetUserMedia() {\n  return canUseDOM && !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia || navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] || navigator['msGetUserMedia']);\n}\nexport function isFrontCameraAvailableAsync(devices) {\n  return _regeneratorRuntime.async(function isFrontCameraAvailableAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(supportsCameraType(['front', 'user', 'facetime'], 'user', devices));\n        case 2:\n          return _context6.abrupt(\"return\", _context6.sent);\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isBackCameraAvailableAsync(devices) {\n  return _regeneratorRuntime.async(function isBackCameraAvailableAsync$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(supportsCameraType(['back', 'rear'], 'environment', devices));\n        case 2:\n          return _context7.abrupt(\"return\", _context7.sent);\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nfunction supportsCameraType(labels, type, devices) {\n  var cameras, _cameras$filter, _cameras$filter2, hasCamera, _cameras$filter3, _cameras$filter4, isCapable;\n  return _regeneratorRuntime.async(function supportsCameraType$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          if (devices) {\n            _context8.next = 6;\n            break;\n          }\n          if (navigator.mediaDevices.enumerateDevices) {\n            _context8.next = 3;\n            break;\n          }\n          return _context8.abrupt(\"return\", null);\n        case 3:\n          _context8.next = 5;\n          return _regeneratorRuntime.awrap(navigator.mediaDevices.enumerateDevices());\n        case 5:\n          devices = _context8.sent;\n        case 6:\n          cameras = devices.filter(function (t) {\n            return t.kind === 'videoinput';\n          });\n          _cameras$filter = cameras.filter(function (camera) {\n            return labels.some(function (label) {\n              return camera.label.toLowerCase().includes(label);\n            });\n          }), _cameras$filter2 = _slicedToArray(_cameras$filter, 1), hasCamera = _cameras$filter2[0];\n          _cameras$filter3 = cameras.filter(function (camera) {\n            if (!('getCapabilities' in camera)) {\n              return null;\n            }\n            var capabilities = camera.getCapabilities();\n            if (!capabilities.facingMode) {\n              return null;\n            }\n            return capabilities.facingMode.find(function (_) {\n              return type;\n            });\n          }), _cameras$filter4 = _slicedToArray(_cameras$filter3, 1), isCapable = _cameras$filter4[0];\n          return _context8.abrupt(\"return\", (isCapable == null ? void 0 : isCapable.deviceId) || (hasCamera == null ? void 0 : hasCamera.deviceId) || null);\n        case 10:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["canUseDOM","userMediaRequested","mountedInstances","requestLegacyUserMediaAsync","props","optionalSource","constraintToSourceId","sources","audioSource","videoSource","audioSourceId","videoSourceId","_regeneratorRuntime","async","requestLegacyUserMediaAsync$","_context","prev","next","id","optional","sourceId","constraint","deviceId","Array","isArray","length","ideal","awrap","Promise","resolve","MediaStreamTrack","getSources","sent","forEach","source","kind","audioConstraints","videoConstraints","abrupt","stop","sourceSelectedAsync","isMuted","constraints","sourceSelectedAsync$","_context2","video","audio","getAnyUserMediaAsync","requestUserMediaAsync","_await$requestLegacyU","_await$requestLegacyU2","_args3","arguments","requestUserMediaAsync$","_context3","undefined","canGetUserMedia","_slicedToArray","ignoreConstraints","_args4","getAnyUserMediaAsync$","_context4","getUserMediaAsync","_objectSpread","t0","name","_getUserMedia","getUserMediaAsync$","_context5","navigator","mediaDevices","getUserMedia","reject","call","isFrontCameraAvailableAsync","devices","isFrontCameraAvailableAsync$","_context6","supportsCameraType","isBackCameraAvailableAsync","isBackCameraAvailableAsync$","_context7","labels","type","cameras","_cameras$filter","_cameras$filter2","hasCamera","_cameras$filter3","_cameras$filter4","isCapable","supportsCameraType$","_context8","enumerateDevices","filter","t","camera","some","label","toLowerCase","includes","capabilities","getCapabilities","facingMode","find","_"],"sources":["/Users/rihong/Documents/Github/SortifyAI/node_modules/expo-camera/src/WebUserMediaManager.ts"],"sourcesContent":["/* eslint-env browser */\n/**\n * A web-only module for ponyfilling the UserMedia API.\n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nexport const userMediaRequested: boolean = false;\n\nexport const mountedInstances: any[] = [];\n\nasync function requestLegacyUserMediaAsync(props): Promise<any[]> {\n  const optionalSource = id => ({ optional: [{ sourceId: id }] });\n\n  const constraintToSourceId = constraint => {\n    const { deviceId } = constraint;\n\n    if (typeof deviceId === 'string') {\n      return deviceId;\n    }\n\n    if (Array.isArray(deviceId) && deviceId.length > 0) {\n      return deviceId[0];\n    }\n\n    if (typeof deviceId === 'object' && deviceId.ideal) {\n      return deviceId.ideal;\n    }\n\n    return null;\n  };\n\n  const sources: any[] = await new Promise(resolve =>\n    // @ts-ignore: https://caniuse.com/#search=getSources Chrome for Android (78) & Samsung Internet (10.1) use this\n    MediaStreamTrack.getSources(sources => resolve(sources))\n  );\n\n  let audioSource = null;\n  let videoSource = null;\n\n  sources.forEach(source => {\n    if (source.kind === 'audio') {\n      audioSource = source.id;\n    } else if (source.kind === 'video') {\n      videoSource = source.id;\n    }\n  });\n\n  const audioSourceId = constraintToSourceId(props.audioConstraints);\n  if (audioSourceId) {\n    audioSource = audioSourceId;\n  }\n\n  const videoSourceId = constraintToSourceId(props.videoConstraints);\n  if (videoSourceId) {\n    videoSource = videoSourceId;\n  }\n\n  return [optionalSource(audioSource), optionalSource(videoSource)];\n}\n\nasync function sourceSelectedAsync(\n  isMuted: boolean,\n  audioConstraints?: MediaTrackConstraints | boolean,\n  videoConstraints?: MediaTrackConstraints | boolean\n): Promise<MediaStream> {\n  const constraints: MediaStreamConstraints = {\n    video: typeof videoConstraints !== 'undefined' ? videoConstraints : true,\n  };\n\n  if (!isMuted) {\n    constraints.audio = typeof audioConstraints !== 'undefined' ? audioConstraints : true;\n  }\n\n  return await getAnyUserMediaAsync(constraints);\n}\n\nexport async function requestUserMediaAsync(\n  props: { audio?: any; video?: any },\n  isMuted: boolean = true\n): Promise<MediaStream> {\n  if (canGetUserMedia()) {\n    return await sourceSelectedAsync(isMuted, props.audio, props.video);\n  }\n  const [audio, video] = await requestLegacyUserMediaAsync(props);\n  return await sourceSelectedAsync(isMuted, audio, video);\n}\n\nexport async function getAnyUserMediaAsync(\n  constraints: MediaStreamConstraints,\n  ignoreConstraints: boolean = false\n): Promise<MediaStream> {\n  try {\n    return await getUserMediaAsync({\n      ...constraints,\n      video: ignoreConstraints || constraints.video,\n    });\n  } catch (error) {\n    if (!ignoreConstraints && error.name === 'ConstraintNotSatisfiedError') {\n      return await getAnyUserMediaAsync(constraints, true);\n    }\n    throw error;\n  }\n}\n\nexport async function getUserMediaAsync(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  const _getUserMedia =\n    navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] || navigator['msGetUserMedia'];\n  return new Promise((resolve, reject) =>\n    _getUserMedia.call(navigator, constraints, resolve, reject)\n  );\n}\n\nexport function canGetUserMedia(): boolean {\n  return (\n    // SSR\n    canUseDOM &&\n    // Has any form of media API\n    !!(\n      (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) ||\n      navigator['mozGetUserMedia'] ||\n      navigator['webkitGetUserMedia'] ||\n      navigator['msGetUserMedia']\n    )\n  );\n}\n\nexport async function isFrontCameraAvailableAsync(\n  devices?: MediaDeviceInfo[]\n): Promise<null | string> {\n  return await supportsCameraType(['front', 'user', 'facetime'], 'user', devices);\n}\n\nexport async function isBackCameraAvailableAsync(\n  devices?: MediaDeviceInfo[]\n): Promise<null | string> {\n  return await supportsCameraType(['back', 'rear'], 'environment', devices);\n}\n\nasync function supportsCameraType(\n  labels: string[],\n  type: string,\n  devices?: MediaDeviceInfo[]\n): Promise<null | string> {\n  if (!devices) {\n    if (!navigator.mediaDevices.enumerateDevices) {\n      return null;\n    }\n    devices = await navigator.mediaDevices.enumerateDevices();\n  }\n  const cameras = devices.filter(t => t.kind === 'videoinput');\n  const [hasCamera] = cameras.filter(camera =>\n    labels.some(label => camera.label.toLowerCase().includes(label))\n  );\n  const [isCapable] = cameras.filter(camera => {\n    if (!('getCapabilities' in camera)) {\n      return null;\n    }\n\n    const capabilities = (camera as any).getCapabilities();\n    if (!capabilities.facingMode) {\n      return null;\n    }\n\n    return capabilities.facingMode.find((_: string) => type);\n  });\n\n  return isCapable?.deviceId || hasCamera?.deviceId || null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}