{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { Platform, UnavailabilityError } from '@unimodules/core';\nimport mapValues from 'lodash/mapValues';\nimport * as React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { PermissionStatus } from \"./Camera.types\";\nimport ExponentCamera from \"./ExponentCamera\";\nimport CameraManager from \"./ExponentCameraManager\";\nvar EventThrottleMs = 500;\nvar _PICTURE_SAVED_CALLBACKS = {};\nvar _GLOBAL_PICTURE_ID = 1;\nfunction ensurePictureOptions(options) {\n  var pictureOptions = !options || typeof options !== 'object' ? {} : options;\n  if (!pictureOptions.quality) {\n    pictureOptions.quality = 1;\n  }\n  if (pictureOptions.onPictureSaved) {\n    var id = _GLOBAL_PICTURE_ID++;\n    _PICTURE_SAVED_CALLBACKS[id] = pictureOptions.onPictureSaved;\n    pictureOptions.id = id;\n    pictureOptions.fastMode = true;\n  }\n  return pictureOptions;\n}\nfunction ensureRecordingOptions(options) {\n  var recordingOptions = options || {};\n  if (!recordingOptions || typeof recordingOptions !== 'object') {\n    recordingOptions = {};\n  } else if (typeof recordingOptions.quality === 'string') {\n    recordingOptions.quality = Camera.Constants.VideoQuality[recordingOptions.quality];\n  }\n  return recordingOptions;\n}\nfunction ensureNativeProps(options) {\n  var props = options || {};\n  if (!props || typeof props !== 'object') {\n    props = {};\n  }\n  var newProps = mapValues(props, convertProp);\n  var propsKeys = Object.keys(newProps);\n  if (!propsKeys.includes('barCodeScannerSettings') && propsKeys.includes('barCodeTypes')) {\n    if (__DEV__) {\n      console.warn(\"The \\\"barCodeTypes\\\" prop for Camera is deprecated and will be removed in SDK 34. Use \\\"barCodeScannerSettings\\\" instead.\");\n    }\n    newProps.barCodeScannerSettings = {\n      barCodeTypes: newProps.barCodeTypes\n    };\n  }\n  if (props.onBarCodeScanned) {\n    newProps.barCodeScannerEnabled = true;\n  }\n  if (props.onFacesDetected) {\n    newProps.faceDetectorEnabled = true;\n  }\n  if (Platform.OS !== 'android') {\n    delete newProps.ratio;\n    delete newProps.useCamera2Api;\n  }\n  return newProps;\n}\nfunction convertProp(value, key) {\n  if (typeof value === 'string' && Camera.ConversionTables[key]) {\n    return Camera.ConversionTables[key][value];\n  }\n  return value;\n}\nfunction _onPictureSaved(_ref) {\n  var nativeEvent = _ref.nativeEvent;\n  var id = nativeEvent.id,\n    data = nativeEvent.data;\n  var callback = _PICTURE_SAVED_CALLBACKS[id];\n  if (callback) {\n    callback(data);\n    delete _PICTURE_SAVED_CALLBACKS[id];\n  }\n}\nvar Camera = function () {\n  var Camera = function (_React$Component) {\n    _inherits(Camera, _React$Component);\n    var _super = _createSuper(Camera);\n    function Camera() {\n      var _this;\n      _classCallCheck(this, Camera);\n      _this = _super.apply(this, arguments);\n      _this._lastEvents = {};\n      _this._lastEventsTimes = {};\n      _this._onCameraReady = function () {\n        if (_this.props.onCameraReady) {\n          _this.props.onCameraReady();\n        }\n      };\n      _this._onMountError = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n        if (_this.props.onMountError) {\n          _this.props.onMountError(nativeEvent);\n        }\n      };\n      _this._onObjectDetected = function (callback) {\n        return function (_ref3) {\n          var nativeEvent = _ref3.nativeEvent;\n          var type = nativeEvent.type;\n          if (_this._lastEvents[type] && _this._lastEventsTimes[type] && JSON.stringify(nativeEvent) === _this._lastEvents[type] && new Date().getTime() - _this._lastEventsTimes[type].getTime() < EventThrottleMs) {\n            return;\n          }\n          if (callback) {\n            callback(nativeEvent);\n            _this._lastEventsTimes[type] = new Date();\n            _this._lastEvents[type] = JSON.stringify(nativeEvent);\n          }\n        };\n      };\n      _this._setReference = function (ref) {\n        if (ref) {\n          _this._cameraRef = ref;\n          if (Platform.OS === 'web') {\n            _this._cameraHandle = ref;\n          } else {\n            _this._cameraHandle = findNodeHandle(ref);\n          }\n        } else {\n          _this._cameraRef = null;\n          _this._cameraHandle = null;\n        }\n      };\n      return _this;\n    }\n    _createClass(Camera, [{\n      key: \"takePictureAsync\",\n      value: function takePictureAsync(options) {\n        var pictureOptions;\n        return _regeneratorRuntime.async(function takePictureAsync$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                pictureOptions = ensurePictureOptions(options);\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(CameraManager.takePicture(pictureOptions, this._cameraHandle));\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"getSupportedRatiosAsync\",\n      value: function getSupportedRatiosAsync() {\n        return _regeneratorRuntime.async(function getSupportedRatiosAsync$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (CameraManager.getSupportedRatios) {\n                  _context2.next = 2;\n                  break;\n                }\n                throw new UnavailabilityError('Camera', 'getSupportedRatiosAsync');\n              case 2:\n                _context2.next = 4;\n                return _regeneratorRuntime.awrap(CameraManager.getSupportedRatios(this._cameraHandle));\n              case 4:\n                return _context2.abrupt(\"return\", _context2.sent);\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"getAvailablePictureSizesAsync\",\n      value: function getAvailablePictureSizesAsync(ratio) {\n        return _regeneratorRuntime.async(function getAvailablePictureSizesAsync$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (CameraManager.getAvailablePictureSizes) {\n                  _context3.next = 2;\n                  break;\n                }\n                throw new UnavailabilityError('Camera', 'getAvailablePictureSizesAsync');\n              case 2:\n                _context3.next = 4;\n                return _regeneratorRuntime.awrap(CameraManager.getAvailablePictureSizes(ratio, this._cameraHandle));\n              case 4:\n                return _context3.abrupt(\"return\", _context3.sent);\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"recordAsync\",\n      value: function recordAsync(options) {\n        var recordingOptions;\n        return _regeneratorRuntime.async(function recordAsync$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (CameraManager.record) {\n                  _context4.next = 2;\n                  break;\n                }\n                throw new UnavailabilityError('Camera', 'recordAsync');\n              case 2:\n                recordingOptions = ensureRecordingOptions(options);\n                _context4.next = 5;\n                return _regeneratorRuntime.awrap(CameraManager.record(recordingOptions, this._cameraHandle));\n              case 5:\n                return _context4.abrupt(\"return\", _context4.sent);\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"stopRecording\",\n      value: function stopRecording() {\n        if (!CameraManager.stopRecording) {\n          throw new UnavailabilityError('Camera', 'stopRecording');\n        }\n        CameraManager.stopRecording(this._cameraHandle);\n      }\n    }, {\n      key: \"pausePreview\",\n      value: function pausePreview() {\n        if (!CameraManager.pausePreview) {\n          throw new UnavailabilityError('Camera', 'pausePreview');\n        }\n        CameraManager.pausePreview(this._cameraHandle);\n      }\n    }, {\n      key: \"resumePreview\",\n      value: function resumePreview() {\n        if (!CameraManager.resumePreview) {\n          throw new UnavailabilityError('Camera', 'resumePreview');\n        }\n        CameraManager.resumePreview(this._cameraHandle);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var nativeProps = ensureNativeProps(this.props);\n        var onBarCodeScanned = this.props.onBarCodeScanned ? this._onObjectDetected(this.props.onBarCodeScanned) : undefined;\n        var onFacesDetected = this._onObjectDetected(this.props.onFacesDetected);\n        return React.createElement(ExponentCamera, _extends({}, nativeProps, {\n          ref: this._setReference,\n          onCameraReady: this._onCameraReady,\n          onMountError: this._onMountError,\n          onBarCodeScanned: onBarCodeScanned,\n          onFacesDetected: onFacesDetected,\n          onPictureSaved: _onPictureSaved\n        }));\n      }\n    }], [{\n      key: \"isAvailableAsync\",\n      value: function isAvailableAsync() {\n        return _regeneratorRuntime.async(function isAvailableAsync$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (CameraManager.isAvailableAsync) {\n                  _context5.next = 2;\n                  break;\n                }\n                throw new UnavailabilityError('expo-camera', 'isAvailableAsync');\n              case 2:\n                _context5.next = 4;\n                return _regeneratorRuntime.awrap(CameraManager.isAvailableAsync());\n              case 4:\n                return _context5.abrupt(\"return\", _context5.sent);\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }, {\n      key: \"getAvailableCameraTypesAsync\",\n      value: function getAvailableCameraTypesAsync() {\n        return _regeneratorRuntime.async(function getAvailableCameraTypesAsync$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (CameraManager.getAvailableCameraTypesAsync) {\n                  _context6.next = 2;\n                  break;\n                }\n                throw new UnavailabilityError('expo-camera', 'getAvailableCameraTypesAsync');\n              case 2:\n                _context6.next = 4;\n                return _regeneratorRuntime.awrap(CameraManager.getAvailableCameraTypesAsync());\n              case 4:\n                return _context6.abrupt(\"return\", _context6.sent);\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }, {\n      key: \"getPermissionsAsync\",\n      value: function getPermissionsAsync() {\n        return _regeneratorRuntime.async(function getPermissionsAsync$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", CameraManager.getPermissionsAsync());\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }, {\n      key: \"requestPermissionsAsync\",\n      value: function requestPermissionsAsync() {\n        return _regeneratorRuntime.async(function requestPermissionsAsync$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt(\"return\", CameraManager.requestPermissionsAsync());\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }]);\n    return Camera;\n  }(React.Component);\n  Camera.Constants = {\n    Type: CameraManager.Type,\n    FlashMode: CameraManager.FlashMode,\n    AutoFocus: CameraManager.AutoFocus,\n    WhiteBalance: CameraManager.WhiteBalance,\n    VideoQuality: CameraManager.VideoQuality,\n    VideoStabilization: CameraManager.VideoStabilization || {}\n  };\n  Camera.ConversionTables = {\n    type: CameraManager.Type,\n    flashMode: CameraManager.FlashMode,\n    autoFocus: CameraManager.AutoFocus,\n    whiteBalance: CameraManager.WhiteBalance\n  };\n  Camera.defaultProps = {\n    zoom: 0,\n    ratio: '4:3',\n    focusDepth: 0,\n    faceDetectorSettings: {},\n    type: CameraManager.Type.back,\n    autoFocus: CameraManager.AutoFocus.on,\n    flashMode: CameraManager.FlashMode.off,\n    whiteBalance: CameraManager.WhiteBalance.auto\n  };\n  return Camera;\n}();\nexport default Camera;\nvar Constants = Camera.Constants,\n  getPermissionsAsync = Camera.getPermissionsAsync,\n  requestPermissionsAsync = Camera.requestPermissionsAsync;\nexport { Constants, getPermissionsAsync, requestPermissionsAsync };\nexport { PermissionStatus };","map":{"version":3,"names":["Platform","UnavailabilityError","mapValues","React","findNodeHandle","PermissionStatus","ExponentCamera","CameraManager","EventThrottleMs","_PICTURE_SAVED_CALLBACKS","_GLOBAL_PICTURE_ID","ensurePictureOptions","options","pictureOptions","quality","onPictureSaved","id","fastMode","ensureRecordingOptions","recordingOptions","Camera","Constants","VideoQuality","ensureNativeProps","props","newProps","convertProp","propsKeys","Object","keys","includes","__DEV__","console","warn","barCodeScannerSettings","barCodeTypes","onBarCodeScanned","barCodeScannerEnabled","onFacesDetected","faceDetectorEnabled","OS","ratio","useCamera2Api","value","key","ConversionTables","_onPictureSaved","_ref","nativeEvent","data","callback","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_lastEvents","_lastEventsTimes","_onCameraReady","onCameraReady","_onMountError","_ref2","onMountError","_onObjectDetected","_ref3","type","JSON","stringify","Date","getTime","_setReference","ref","_cameraRef","_cameraHandle","_createClass","takePictureAsync","_regeneratorRuntime","async","takePictureAsync$","_context","prev","next","awrap","takePicture","abrupt","sent","stop","Promise","getSupportedRatiosAsync","getSupportedRatiosAsync$","_context2","getSupportedRatios","getAvailablePictureSizesAsync","getAvailablePictureSizesAsync$","_context3","getAvailablePictureSizes","recordAsync","recordAsync$","_context4","record","stopRecording","pausePreview","resumePreview","render","nativeProps","undefined","createElement","_extends","isAvailableAsync","isAvailableAsync$","_context5","getAvailableCameraTypesAsync","getAvailableCameraTypesAsync$","_context6","getPermissionsAsync","getPermissionsAsync$","_context7","requestPermissionsAsync","requestPermissionsAsync$","_context8","Component","Type","FlashMode","AutoFocus","WhiteBalance","VideoStabilization","flashMode","autoFocus","whiteBalance","defaultProps","zoom","focusDepth","faceDetectorSettings","back","on","off","auto"],"sources":["/Users/rihong/Documents/Github/SortifyAI/node_modules/expo-camera/src/Camera.tsx"],"sourcesContent":["import { Platform, UnavailabilityError } from '@unimodules/core';\nimport mapValues from 'lodash/mapValues';\nimport * as React from 'react';\nimport { findNodeHandle } from 'react-native';\n\nimport {\n  BarCodeScanningResult,\n  CameraCapturedPicture,\n  CameraMountError,\n  CameraNativeProps,\n  CameraPictureOptions,\n  CameraProps,\n  CameraRecordingOptions,\n  FaceDetectionResult,\n  PermissionExpiration,\n  PermissionResponse,\n  PermissionStatus,\n} from './Camera.types';\nimport ExponentCamera from './ExponentCamera';\nimport CameraManager from './ExponentCameraManager';\n\nconst EventThrottleMs = 500;\n\nconst _PICTURE_SAVED_CALLBACKS = {};\n\nlet _GLOBAL_PICTURE_ID = 1;\n\nfunction ensurePictureOptions(options?: CameraPictureOptions): CameraPictureOptions {\n  const pictureOptions: CameraPictureOptions =\n    !options || typeof options !== 'object' ? {} : options;\n\n  if (!pictureOptions.quality) {\n    pictureOptions.quality = 1;\n  }\n  if (pictureOptions.onPictureSaved) {\n    const id = _GLOBAL_PICTURE_ID++;\n    _PICTURE_SAVED_CALLBACKS[id] = pictureOptions.onPictureSaved;\n    pictureOptions.id = id;\n    pictureOptions.fastMode = true;\n  }\n  return pictureOptions;\n}\n\nfunction ensureRecordingOptions(options?: CameraRecordingOptions): CameraRecordingOptions {\n  let recordingOptions = options || {};\n\n  if (!recordingOptions || typeof recordingOptions !== 'object') {\n    recordingOptions = {};\n  } else if (typeof recordingOptions.quality === 'string') {\n    recordingOptions.quality = Camera.Constants.VideoQuality[recordingOptions.quality];\n  }\n\n  return recordingOptions;\n}\n\nfunction ensureNativeProps(options?: CameraProps): CameraNativeProps {\n  let props = options || {};\n\n  if (!props || typeof props !== 'object') {\n    props = {};\n  }\n\n  const newProps: CameraNativeProps = mapValues(props, convertProp);\n\n  const propsKeys = Object.keys(newProps);\n  // barCodeTypes is deprecated\n  if (!propsKeys.includes('barCodeScannerSettings') && propsKeys.includes('barCodeTypes')) {\n    if (__DEV__) {\n      console.warn(\n        `The \"barCodeTypes\" prop for Camera is deprecated and will be removed in SDK 34. Use \"barCodeScannerSettings\" instead.`\n      );\n    }\n    newProps.barCodeScannerSettings = {\n      // @ts-ignore\n      barCodeTypes: newProps.barCodeTypes,\n    };\n  }\n\n  if (props.onBarCodeScanned) {\n    newProps.barCodeScannerEnabled = true;\n  }\n\n  if (props.onFacesDetected) {\n    newProps.faceDetectorEnabled = true;\n  }\n\n  if (Platform.OS !== 'android') {\n    delete newProps.ratio;\n    delete newProps.useCamera2Api;\n  }\n\n  return newProps;\n}\n\nfunction convertProp(value: any, key: string): any {\n  if (typeof value === 'string' && Camera.ConversionTables[key]) {\n    return Camera.ConversionTables[key][value];\n  }\n\n  return value;\n}\n\nfunction _onPictureSaved({\n  nativeEvent,\n}: {\n  nativeEvent: { data: CameraCapturedPicture; id: number };\n}) {\n  const { id, data } = nativeEvent;\n  const callback = _PICTURE_SAVED_CALLBACKS[id];\n  if (callback) {\n    callback(data);\n    delete _PICTURE_SAVED_CALLBACKS[id];\n  }\n}\n\nexport default class Camera extends React.Component<CameraProps> {\n  static async isAvailableAsync(): Promise<boolean> {\n    if (!CameraManager.isAvailableAsync) {\n      throw new UnavailabilityError('expo-camera', 'isAvailableAsync');\n    }\n\n    return await CameraManager.isAvailableAsync();\n  }\n\n  static async getAvailableCameraTypesAsync(): Promise<('front' | 'back')[]> {\n    if (!CameraManager.getAvailableCameraTypesAsync) {\n      throw new UnavailabilityError('expo-camera', 'getAvailableCameraTypesAsync');\n    }\n\n    return await CameraManager.getAvailableCameraTypesAsync();\n  }\n\n  static Constants = {\n    Type: CameraManager.Type,\n    FlashMode: CameraManager.FlashMode,\n    AutoFocus: CameraManager.AutoFocus,\n    WhiteBalance: CameraManager.WhiteBalance,\n    VideoQuality: CameraManager.VideoQuality,\n    VideoStabilization: CameraManager.VideoStabilization || {},\n  };\n\n  // Values under keys from this object will be transformed to native options\n  static ConversionTables = {\n    type: CameraManager.Type,\n    flashMode: CameraManager.FlashMode,\n    autoFocus: CameraManager.AutoFocus,\n    whiteBalance: CameraManager.WhiteBalance,\n  };\n\n  static defaultProps: CameraProps = {\n    zoom: 0,\n    ratio: '4:3',\n    focusDepth: 0,\n    faceDetectorSettings: {},\n    type: CameraManager.Type.back,\n    autoFocus: CameraManager.AutoFocus.on,\n    flashMode: CameraManager.FlashMode.off,\n    whiteBalance: CameraManager.WhiteBalance.auto,\n  };\n\n  static async getPermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.getPermissionsAsync();\n  }\n\n  static async requestPermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.requestPermissionsAsync();\n  }\n\n  _cameraHandle?: number | null;\n  _cameraRef?: React.Component | null;\n  _lastEvents: { [eventName: string]: string } = {};\n  _lastEventsTimes: { [eventName: string]: Date } = {};\n\n  async takePictureAsync(options?: CameraPictureOptions): Promise<CameraCapturedPicture> {\n    const pictureOptions = ensurePictureOptions(options);\n\n    return await CameraManager.takePicture(pictureOptions, this._cameraHandle);\n  }\n\n  async getSupportedRatiosAsync(): Promise<string[]> {\n    if (!CameraManager.getSupportedRatios) {\n      throw new UnavailabilityError('Camera', 'getSupportedRatiosAsync');\n    }\n\n    return await CameraManager.getSupportedRatios(this._cameraHandle);\n  }\n\n  async getAvailablePictureSizesAsync(ratio?: string): Promise<string[]> {\n    if (!CameraManager.getAvailablePictureSizes) {\n      throw new UnavailabilityError('Camera', 'getAvailablePictureSizesAsync');\n    }\n    return await CameraManager.getAvailablePictureSizes(ratio, this._cameraHandle);\n  }\n\n  async recordAsync(options?: CameraRecordingOptions): Promise<{ uri: string }> {\n    if (!CameraManager.record) {\n      throw new UnavailabilityError('Camera', 'recordAsync');\n    }\n\n    const recordingOptions = ensureRecordingOptions(options);\n\n    return await CameraManager.record(recordingOptions, this._cameraHandle);\n  }\n\n  stopRecording() {\n    if (!CameraManager.stopRecording) {\n      throw new UnavailabilityError('Camera', 'stopRecording');\n    }\n\n    CameraManager.stopRecording(this._cameraHandle);\n  }\n\n  pausePreview() {\n    if (!CameraManager.pausePreview) {\n      throw new UnavailabilityError('Camera', 'pausePreview');\n    }\n\n    CameraManager.pausePreview(this._cameraHandle);\n  }\n\n  resumePreview() {\n    if (!CameraManager.resumePreview) {\n      throw new UnavailabilityError('Camera', 'resumePreview');\n    }\n\n    CameraManager.resumePreview(this._cameraHandle);\n  }\n\n  _onCameraReady = () => {\n    if (this.props.onCameraReady) {\n      this.props.onCameraReady();\n    }\n  };\n\n  _onMountError = ({ nativeEvent }: { nativeEvent: { message: string } }) => {\n    if (this.props.onMountError) {\n      this.props.onMountError(nativeEvent);\n    }\n  };\n\n  _onObjectDetected = (callback?: Function) => ({ nativeEvent }: { nativeEvent: any }) => {\n    const { type } = nativeEvent;\n    if (\n      this._lastEvents[type] &&\n      this._lastEventsTimes[type] &&\n      JSON.stringify(nativeEvent) === this._lastEvents[type] &&\n      new Date().getTime() - this._lastEventsTimes[type].getTime() < EventThrottleMs\n    ) {\n      return;\n    }\n\n    if (callback) {\n      callback(nativeEvent);\n      this._lastEventsTimes[type] = new Date();\n      this._lastEvents[type] = JSON.stringify(nativeEvent);\n    }\n  };\n\n  _setReference = (ref?: React.Component) => {\n    if (ref) {\n      this._cameraRef = ref;\n      // TODO(Bacon): Unify these - perhaps with hooks?\n      if (Platform.OS === 'web') {\n        this._cameraHandle = ref as any;\n      } else {\n        this._cameraHandle = findNodeHandle(ref);\n      }\n    } else {\n      this._cameraRef = null;\n      this._cameraHandle = null;\n    }\n  };\n\n  render() {\n    const nativeProps = ensureNativeProps(this.props);\n\n    const onBarCodeScanned = this.props.onBarCodeScanned\n      ? this._onObjectDetected(this.props.onBarCodeScanned)\n      : undefined;\n    const onFacesDetected = this._onObjectDetected(this.props.onFacesDetected);\n\n    return (\n      <ExponentCamera\n        {...nativeProps}\n        ref={this._setReference}\n        onCameraReady={this._onCameraReady}\n        onMountError={this._onMountError}\n        onBarCodeScanned={onBarCodeScanned}\n        onFacesDetected={onFacesDetected}\n        onPictureSaved={_onPictureSaved}\n      />\n    );\n  }\n}\n\nexport const { Constants, getPermissionsAsync, requestPermissionsAsync } = Camera;\n\nexport {\n  CameraCapturedPicture,\n  CameraNativeProps,\n  CameraPictureOptions,\n  CameraProps,\n  CameraRecordingOptions,\n  PermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n  BarCodeScanningResult,\n  FaceDetectionResult,\n  CameraMountError,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}