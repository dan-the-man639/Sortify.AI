{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { CodedError, UnavailabilityError } from '@unimodules/core';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Canvas from \"./Canvas\";\nfunction getImageForAsset(asset) {\n  if (asset != null && typeof asset === 'object' && asset !== null && asset.downloadAsync) {\n    var dataURI = asset.localUri || asset.uri || '';\n    var image = new Image();\n    image.src = dataURI;\n    return image;\n  }\n  return asset;\n}\nfunction isOffscreenCanvas(element) {\n  return element && typeof element.convertToBlob === 'function';\n}\nfunction asExpoContext(gl) {\n  gl.endFrameEXP = function glEndFrameEXP() {};\n  if (!gl['_expo_texImage2D']) {\n    gl['_expo_texImage2D'] = gl.texImage2D;\n    gl.texImage2D = function () {\n      for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n        props[_key] = arguments[_key];\n      }\n      var nextProps = [].concat(props);\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texImage2D'].apply(gl, _toConsumableArray(nextProps));\n    };\n  }\n  if (!gl['_expo_texSubImage2D']) {\n    gl['_expo_texSubImage2D'] = gl.texSubImage2D;\n    gl.texSubImage2D = function () {\n      for (var _len2 = arguments.length, props = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        props[_key2] = arguments[_key2];\n      }\n      var nextProps = [].concat(props);\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texSubImage2D'].apply(gl, _toConsumableArray(nextProps));\n    };\n  }\n  return gl;\n}\nfunction ensureContext(canvas, contextAttributes) {\n  if (!canvas) {\n    throw new CodedError('ERR_GL_INVALID', 'Attempting to use the GL context before it has been created.');\n  }\n  var isIOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n  var context = !isIOS && canvas.getContext('webgl2', contextAttributes) || canvas.getContext('webgl', contextAttributes) || canvas.getContext('webgl-experimental', contextAttributes) || canvas.getContext('experimental-webgl', contextAttributes);\n  invariant(context, 'Browser does not support WebGL');\n  return asExpoContext(context);\n}\nfunction getBlobFromWebGLRenderingContext(gl) {\n  var options,\n    canvas,\n    blob,\n    _args = arguments;\n  return _regeneratorRuntime.async(function getBlobFromWebGLRenderingContext$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          invariant(gl, 'getBlobFromWebGLRenderingContext(): WebGL Rendering Context is not defined');\n          canvas = gl.canvas;\n          blob = null;\n          if (!(typeof canvas.msToBlob === 'function')) {\n            _context.next = 10;\n            break;\n          }\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(canvas.msToBlob());\n        case 7:\n          blob = _context.sent;\n          _context.next = 19;\n          break;\n        case 10:\n          if (!isOffscreenCanvas(canvas)) {\n            _context.next = 16;\n            break;\n          }\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(canvas.convertToBlob({\n            quality: options.compress,\n            type: options.format\n          }));\n        case 13:\n          blob = _context.sent;\n          _context.next = 19;\n          break;\n        case 16:\n          _context.next = 18;\n          return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n            canvas.toBlob(function (blob) {\n              return resolve(blob);\n            }, options.format, options.compress);\n          }));\n        case 18:\n          blob = _context.sent;\n        case 19:\n          return _context.abrupt(\"return\", {\n            blob: blob,\n            width: canvas.width,\n            height: canvas.height\n          });\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport var GLView = function (_React$Component) {\n  _inherits(GLView, _React$Component);\n  var _super = _createSuper(GLView);\n  function GLView() {\n    var _this;\n    _classCallCheck(this, GLView);\n    _this = _super.apply(this, arguments);\n    _this.onContextLost = function (event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      _this.gl = undefined;\n      if (typeof _this.props.onContextLost === 'function') {\n        _this.props.onContextLost();\n      }\n    };\n    _this.onContextRestored = function () {\n      _this.gl = undefined;\n      if (_this.getGLContext() == null) {\n        throw new CodedError('ERR_GL_INVALID', 'Failed to restore GL context.');\n      }\n    };\n    _this.setCanvasRef = function (canvas) {\n      _this.canvas = canvas;\n      if (typeof _this.props.nativeRef_EXPERIMENTAL === 'function') {\n        _this.props.nativeRef_EXPERIMENTAL(canvas);\n      }\n      if (_this.canvas) {\n        _this.canvas.addEventListener('webglcontextlost', _this.onContextLost);\n        _this.canvas.addEventListener('webglcontextrestored', _this.onContextRestored);\n        _this.getGLContext();\n      }\n    };\n    return _this;\n  }\n  _createClass(GLView, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.gl) {\n        var loseContextExt = this.gl.getExtension('WEBGL_lose_context');\n        if (loseContextExt) {\n          loseContextExt.loseContext();\n        }\n        this.gl = undefined;\n      }\n      if (this.canvas) {\n        this.canvas.removeEventListener('webglcontextlost', this.onContextLost);\n        this.canvas.removeEventListener('webglcontextrestored', this.onContextRestored);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        onContextCreate = _this$props.onContextCreate,\n        onContextRestored = _this$props.onContextRestored,\n        onContextLost = _this$props.onContextLost,\n        webglContextAttributes = _this$props.webglContextAttributes,\n        msaaSamples = _this$props.msaaSamples,\n        nativeRef_EXPERIMENTAL = _this$props.nativeRef_EXPERIMENTAL,\n        ref = _this$props.ref,\n        domProps = _objectWithoutProperties(_this$props, [\"onContextCreate\", \"onContextRestored\", \"onContextLost\", \"webglContextAttributes\", \"msaaSamples\", \"nativeRef_EXPERIMENTAL\", \"ref\"]);\n      return React.createElement(Canvas, _extends({}, domProps, {\n        canvasRef: this.setCanvasRef\n      }));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var webglContextAttributes = this.props.webglContextAttributes;\n      if (this.canvas && webglContextAttributes !== prevProps.webglContextAttributes) {\n        this.onContextLost(null);\n        this.onContextRestored();\n      }\n    }\n  }, {\n    key: \"getGLContextOrReject\",\n    value: function getGLContextOrReject() {\n      var gl = this.getGLContext();\n      if (!gl) {\n        throw new CodedError('ERR_GL_INVALID', 'Attempting to use the GL context before it has been created.');\n      }\n      return gl;\n    }\n  }, {\n    key: \"getGLContext\",\n    value: function getGLContext() {\n      if (this.gl) return this.gl;\n      if (this.canvas) {\n        this.gl = ensureContext(this.canvas, this.props.webglContextAttributes);\n        if (typeof this.props.onContextCreate === 'function') {\n          this.props.onContextCreate(this.gl);\n        }\n        return this.gl;\n      }\n      return null;\n    }\n  }, {\n    key: \"takeSnapshotAsync\",\n    value: function takeSnapshotAsync() {\n      var options,\n        gl,\n        _args2 = arguments;\n      return _regeneratorRuntime.async(function takeSnapshotAsync$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              if (GLView.takeSnapshotAsync) {\n                _context2.next = 3;\n                break;\n              }\n              throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n            case 3:\n              gl = this.getGLContextOrReject();\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(GLView.takeSnapshotAsync(gl, options));\n            case 6:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"startARSessionAsync\",\n    value: function startARSessionAsync() {\n      return _regeneratorRuntime.async(function startARSessionAsync$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              throw new UnavailabilityError('GLView', 'startARSessionAsync');\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"createCameraTextureAsync\",\n    value: function createCameraTextureAsync() {\n      return _regeneratorRuntime.async(function createCameraTextureAsync$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              throw new UnavailabilityError('GLView', 'createCameraTextureAsync');\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"destroyObjectAsync\",\n    value: function destroyObjectAsync(glObject) {\n      return _regeneratorRuntime.async(function destroyObjectAsync$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              throw new UnavailabilityError('GLView', 'destroyObjectAsync');\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }], [{\n    key: \"createContextAsync\",\n    value: function createContextAsync() {\n      var canvas, _Dimensions$get, width, height, scale;\n      return _regeneratorRuntime.async(function createContextAsync$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (canUseDOM) {\n                _context6.next = 2;\n                break;\n              }\n              return _context6.abrupt(\"return\", null);\n            case 2:\n              canvas = document.createElement('canvas');\n              _Dimensions$get = Dimensions.get('window'), width = _Dimensions$get.width, height = _Dimensions$get.height, scale = _Dimensions$get.scale;\n              canvas.width = width * scale;\n              canvas.height = height * scale;\n              return _context6.abrupt(\"return\", ensureContext(canvas));\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"destroyContextAsync\",\n    value: function destroyContextAsync(exgl) {\n      return _regeneratorRuntime.async(function destroyContextAsync$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", true);\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"takeSnapshotAsync\",\n    value: function takeSnapshotAsync(gl) {\n      var options,\n        _await$getBlobFromWeb,\n        blob,\n        width,\n        height,\n        _args8 = arguments;\n      return _regeneratorRuntime.async(function takeSnapshotAsync$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              options = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n              _context8.next = 3;\n              return _regeneratorRuntime.awrap(getBlobFromWebGLRenderingContext(gl, options));\n            case 3:\n              _await$getBlobFromWeb = _context8.sent;\n              blob = _await$getBlobFromWeb.blob;\n              width = _await$getBlobFromWeb.width;\n              height = _await$getBlobFromWeb.height;\n              if (blob) {\n                _context8.next = 9;\n                break;\n              }\n              throw new CodedError('ERR_GL_SNAPSHOT', 'Failed to save the GL context');\n            case 9:\n              return _context8.abrupt(\"return\", {\n                uri: blob,\n                localUri: '',\n                width: width,\n                height: height\n              });\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n  return GLView;\n}(React.Component);","map":{"version":3,"names":["CodedError","UnavailabilityError","canUseDOM","invariant","React","Dimensions","Canvas","getImageForAsset","asset","downloadAsync","dataURI","localUri","uri","image","Image","src","isOffscreenCanvas","element","convertToBlob","asExpoContext","gl","endFrameEXP","glEndFrameEXP","texImage2D","_len","arguments","length","props","Array","_key","nextProps","concat","push","pop","apply","_toConsumableArray","texSubImage2D","_len2","_key2","ensureContext","canvas","contextAttributes","isIOS","navigator","platform","test","context","getContext","getBlobFromWebGLRenderingContext","options","blob","_args","_regeneratorRuntime","async","getBlobFromWebGLRenderingContext$","_context","prev","next","undefined","msToBlob","awrap","sent","quality","compress","type","format","Promise","resolve","toBlob","abrupt","width","height","stop","GLView","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","onContextLost","event","preventDefault","onContextRestored","getGLContext","setCanvasRef","nativeRef_EXPERIMENTAL","addEventListener","_createClass","key","value","componentWillUnmount","loseContextExt","getExtension","loseContext","removeEventListener","render","_this$props","onContextCreate","webglContextAttributes","msaaSamples","ref","domProps","_objectWithoutProperties","createElement","_extends","canvasRef","componentDidUpdate","prevProps","getGLContextOrReject","takeSnapshotAsync","_args2","takeSnapshotAsync$","_context2","startARSessionAsync","startARSessionAsync$","_context3","createCameraTextureAsync","createCameraTextureAsync$","_context4","destroyObjectAsync","glObject","destroyObjectAsync$","_context5","createContextAsync","_Dimensions$get","scale","createContextAsync$","_context6","document","get","destroyContextAsync","exgl","destroyContextAsync$","_context7","_await$getBlobFromWeb","_args8","_context8","Component"],"sources":["/Users/rihong/Documents/Github/SortifyAI/node_modules/expo-gl/src/GLView.web.tsx"],"sourcesContent":["import { CodedError, UnavailabilityError } from '@unimodules/core';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport Canvas from './Canvas';\nimport {\n  BaseGLViewProps,\n  ComponentOrHandle,\n  ExpoWebGLRenderingContext,\n  GLSnapshot,\n  SnapshotOptions,\n} from './GLView.types';\n\nfunction getImageForAsset(asset: {\n  downloadAsync: () => Promise<any>;\n  uri?: string;\n  localUri?: string;\n}): HTMLImageElement | any {\n  if (asset != null && typeof asset === 'object' && asset !== null && asset.downloadAsync) {\n    const dataURI = asset.localUri || asset.uri || '';\n    const image = new Image();\n    image.src = dataURI;\n    return image;\n  }\n  return asset;\n}\n\nfunction isOffscreenCanvas(element: any): element is OffscreenCanvas {\n  return element && typeof element.convertToBlob === 'function';\n}\n\nfunction asExpoContext(gl: ExpoWebGLRenderingContext): WebGLRenderingContext {\n  gl.endFrameEXP = function glEndFrameEXP(): void {};\n\n  if (!gl['_expo_texImage2D']) {\n    gl['_expo_texImage2D'] = gl.texImage2D;\n    gl.texImage2D = (...props: any[]): any => {\n      const nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texImage2D'](...nextProps);\n    };\n  }\n\n  if (!gl['_expo_texSubImage2D']) {\n    gl['_expo_texSubImage2D'] = gl.texSubImage2D;\n    gl.texSubImage2D = (...props: any[]): any => {\n      const nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texSubImage2D'](...nextProps);\n    };\n  }\n\n  return gl;\n}\n\nfunction ensureContext(\n  canvas?: HTMLCanvasElement,\n  contextAttributes?: WebGLContextAttributes\n): WebGLRenderingContext {\n  if (!canvas) {\n    throw new CodedError(\n      'ERR_GL_INVALID',\n      'Attempting to use the GL context before it has been created.'\n    );\n  }\n\n  // Apple disables WebGL 2.0 and doesn't provide any way to detect if it's disabled.\n  const isIOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n\n  const context =\n    (!isIOS && canvas.getContext('webgl2', contextAttributes)) ||\n    canvas.getContext('webgl', contextAttributes) ||\n    canvas.getContext('webgl-experimental', contextAttributes) ||\n    canvas.getContext('experimental-webgl', contextAttributes);\n  invariant(context, 'Browser does not support WebGL');\n  return asExpoContext(context as ExpoWebGLRenderingContext);\n}\n\nexport interface GLViewProps extends BaseGLViewProps {\n  onContextCreate: (gl: WebGLRenderingContext) => void;\n  onContextRestored?: (gl?: WebGLRenderingContext) => void;\n  onContextLost?: () => void;\n  webglContextAttributes?: WebGLContextAttributes;\n  /**\n   * [iOS only] Number of samples for Apple's built-in multisampling.\n   */\n  msaaSamples: number;\n\n  /**\n   * A ref callback for the native GLView\n   */\n  nativeRef_EXPERIMENTAL?(callback: ComponentOrHandle | HTMLCanvasElement | null);\n}\n\nasync function getBlobFromWebGLRenderingContext(\n  gl: WebGLRenderingContext,\n  options: SnapshotOptions = {}\n): Promise<{ width: number; height: number; blob: Blob | null }> {\n  invariant(gl, 'getBlobFromWebGLRenderingContext(): WebGL Rendering Context is not defined');\n\n  const { canvas } = gl;\n\n  let blob: Blob | null = null;\n\n  if (typeof (canvas as any).msToBlob === 'function') {\n    // @ts-ignore: polyfill: https://stackoverflow.com/a/29815058/4047926\n    blob = await canvas.msToBlob();\n  } else if (isOffscreenCanvas(canvas)) {\n    blob = await canvas.convertToBlob({ quality: options.compress, type: options.format });\n  } else {\n    blob = await new Promise(resolve => {\n      canvas.toBlob((blob: Blob | null) => resolve(blob), options.format, options.compress);\n    });\n  }\n\n  return {\n    blob,\n    width: canvas.width,\n    height: canvas.height,\n  };\n}\n\nexport class GLView extends React.Component<GLViewProps> {\n  canvas?: HTMLCanvasElement;\n\n  gl?: WebGLRenderingContext;\n\n  static async createContextAsync(): Promise<WebGLRenderingContext | null> {\n    if (!canUseDOM) {\n      return null;\n    }\n    const canvas = document.createElement('canvas');\n    const { width, height, scale } = Dimensions.get('window');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    return ensureContext(canvas);\n  }\n\n  static async destroyContextAsync(exgl?: WebGLRenderingContext | number): Promise<boolean> {\n    // Do nothing\n    return true;\n  }\n\n  static async takeSnapshotAsync(\n    gl: WebGLRenderingContext,\n    options: SnapshotOptions = {}\n  ): Promise<GLSnapshot> {\n    const { blob, width, height } = await getBlobFromWebGLRenderingContext(gl, options);\n\n    if (!blob) {\n      throw new CodedError('ERR_GL_SNAPSHOT', 'Failed to save the GL context');\n    }\n\n    return {\n      uri: blob,\n      localUri: '',\n      width,\n      height,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.gl) {\n      const loseContextExt = this.gl.getExtension('WEBGL_lose_context');\n      if (loseContextExt) {\n        loseContextExt.loseContext();\n      }\n      this.gl = undefined;\n    }\n    if (this.canvas) {\n      this.canvas.removeEventListener('webglcontextlost', this.onContextLost);\n      this.canvas.removeEventListener('webglcontextrestored', this.onContextRestored);\n    }\n  }\n\n  render() {\n    const {\n      onContextCreate,\n      onContextRestored,\n      onContextLost,\n      webglContextAttributes,\n      msaaSamples,\n      nativeRef_EXPERIMENTAL,\n      // @ts-ignore: ref does not exist\n      ref,\n      ...domProps\n    } = this.props;\n\n    return <Canvas {...domProps} canvasRef={this.setCanvasRef} />;\n  }\n\n  componentDidUpdate(prevProps: GLViewProps) {\n    const { webglContextAttributes } = this.props;\n    if (this.canvas && webglContextAttributes !== prevProps.webglContextAttributes) {\n      this.onContextLost(null);\n      this.onContextRestored();\n    }\n  }\n\n  private getGLContextOrReject(): WebGLRenderingContext {\n    const gl = this.getGLContext();\n    if (!gl) {\n      throw new CodedError(\n        'ERR_GL_INVALID',\n        'Attempting to use the GL context before it has been created.'\n      );\n    }\n    return gl;\n  }\n\n  private onContextLost = (event: Event | null): void => {\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n    this.gl = undefined;\n\n    if (typeof this.props.onContextLost === 'function') {\n      this.props.onContextLost();\n    }\n  };\n\n  private onContextRestored = (): void => {\n    this.gl = undefined;\n    if (this.getGLContext() == null) {\n      throw new CodedError('ERR_GL_INVALID', 'Failed to restore GL context.');\n    }\n  };\n\n  private getGLContext(): WebGLRenderingContext | null {\n    if (this.gl) return this.gl;\n\n    if (this.canvas) {\n      this.gl = ensureContext(this.canvas, this.props.webglContextAttributes);\n      if (typeof this.props.onContextCreate === 'function') {\n        this.props.onContextCreate(this.gl);\n      }\n      return this.gl;\n    }\n    return null;\n  }\n\n  private setCanvasRef = (canvas: HTMLCanvasElement): void => {\n    this.canvas = canvas;\n\n    if (typeof this.props.nativeRef_EXPERIMENTAL === 'function') {\n      this.props.nativeRef_EXPERIMENTAL(canvas);\n    }\n\n    if (this.canvas) {\n      this.canvas.addEventListener('webglcontextlost', this.onContextLost);\n      this.canvas.addEventListener('webglcontextrestored', this.onContextRestored);\n\n      this.getGLContext();\n    }\n  };\n\n  public async takeSnapshotAsync(options: SnapshotOptions = {}): Promise<GLSnapshot> {\n    if (!GLView.takeSnapshotAsync) {\n      throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n    }\n\n    const gl = this.getGLContextOrReject();\n    return await GLView.takeSnapshotAsync(gl, options);\n  }\n\n  public async startARSessionAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'startARSessionAsync');\n  }\n\n  public async createCameraTextureAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'createCameraTextureAsync');\n  }\n\n  public async destroyObjectAsync(glObject: WebGLObject): Promise<void> {\n    throw new UnavailabilityError('GLView', 'destroyObjectAsync');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}